<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8" />
    <title>Clean&Smart Config</title>
    <script type="text/javascript" src="slate.min.js"></script>
    <link type="text/css" rel="stylesheet" href="slate.min.css" />

    <style type="text/css">
        .popup {
            display:none; 
            background-color:white !important; 
            position:absolute !important; 
            top:0;
            left:0;
            height:100%; 
            width:100%;
            border:solid 1px darkgray;
            z-index:1000;
            overflow:auto;
        }

    </style>

</head>

<body>
    

    <div class="item-container">
        <div class="item-container-header">Clean & Smart Config</div>
        <div class="item-container-content">

            <label class="item">
                Hours and Minutes Separator
                <select id="hoursMinutesSeparator" class="item-select">
                    <option id="optColon" value="0" class="item-select-option">Colon :</option>
                    <option id="optDot" value="1" class="item-select-option">Dot .</option>
                </select>
            </label>
            <label class="item">
                Date format
                <select id="dateFormat" class="item-select">
                    <option id="optMDY" value="0" class="item-select-option">Month Day Year</option>
                    <option id="optDMY" value="1" class="item-select-option">Day Month Year</option>
                    <option id="optYMD" value="2" class="item-select-option" style="display:none">YYYY-MM-DD</option>
                </select>
            </label>
            <label class="item" style="display:none" id="xDivLanguage">
                Language
                <select id="language" class="item-select">
                    <option id="default" value="255" class="item-select-option">Default</option>
                    <option id="catalan" value="5" class="item-select-option" style="display:none">Català</option>
                    <option id="italian" value="1" class="item-select-option">Italiano</option>
                    <option id="malay" value="6" class="item-select-option" style="display:none">Melayu</option>
                    <option id="dutch" value="3" class="item-select-option" style="display:none">Nederlandse</option>
                    <option id="norvegian" value="4" class="item-select-option" style="display:none">Norsk</option>
                    <option id="swedish" value="0" class="item-select-option">Svenska</option>
                    <option id="russian" value="2" class="item-select-option" style="display:none">Русский</option>
                    <option id="polish" value="7" class="item-select-option" style="display:none">Polskie</option>
                </select>
            </label>

            <hr />

            <label class="item">
                Display Temperature in
                <select id="temperatureFormat" class="item-select">
                    <option id="optF" value="0" class="item-select-option">Fahrenheit</option>
                    <option id="optC" value="1" class="item-select-option">Celsius</option>
                </select>
            </label>

            <hr />

            <label class="item" id="bt217">
                Buzz on BT connect/disconnect
                <input type="checkbox" class="item-checkbox" name="bluetoothBuzz" id="bluetoothBuzz">
            </label>

            <label class="item" id="bt218" style="display:none">
                Bluetooth Alert
                <select id="bluetoothAlert" class="item-select">
                    <option value="0" class="item-select-option">Disabled</option>
                    <option value="1" class="item-select-option">Silent</option>
                    <option value="2" class="item-select-option" selected="selected">Weak</option>
                    <option value="3" class="item-select-option">Normal</option>
                    <option value="4" class="item-select-option">Strong</option>
                    <option value="5" class="item-select-option">Double</option>
                </select>
            </label>

        </div>
    </div>

    <div class="item-container">
        <div class="button-container">
            <input type="button" class="item-button" value="SAVE" id="xbtnSave">
        </div>
    </div>

    <div class="item-container">
        <div class="button-container">
            <input type="button" class="item-button" value="CANCEL" id="xbtnCancel">
        </div>
    </div>

    <script>

        var BLUETOOTH_ALERT_DISABLED = 0;
        var BLUETOOTH_ALERT_SILENT = 1;
        var BLUETOOTH_ALERT_WEAK = 2;
        var BLUETOOTH_ALERT_NORMAL = 3;
        var BLUETOOTH_ALERT_STRONG = 4;
        var BLUETOOTH_ALERT_DOUBLE = 5;

   
        // to get value of query string
        function getURLVariable(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)",
                regex = new RegExp(regexS),
                results = regex.exec(window.location.href);
            if (results == null) return "";
            else return results[1];
        }

        $(document).ready(function () {

            if (getURLVariable('version') >= '1.02') $('#xDivLocationSelection').show(); // showing location only for this version and above
            if (getURLVariable('version') >= '1.03') $('#optYMD').show(); // show this format only for this version & above
            if (getURLVariable('version') >= '1.04') $('#xDivWeatherInterval').show(); // show weather update interval only for this version & above
            if (getURLVariable('version') >= '2.04') $('#xDivLanguage').show(); // show language selection only for this version & above
            if (getURLVariable('version') >= '2.05') { // show these languages only for this version & above
                $('#russian').show(); $('#dutch').show(); $('#norvegian').show();
            }
            if (getURLVariable('version') >= '2.06') { // show these languages only for this version & above
                $('#catalan').show(); $('#malay').show();
            }

            if (getURLVariable('version') >= '2.25') { // show these languages only for this version & above
                $('#polish').show();
            }

            if (getURLVariable('version') >= '2.18') { //after version 2.18 use new bluetooth dropdown
                $("#bt217").hide();
                $("#bt218").show();
            }

            // loading settings
            try {
                settings = JSON.parse(localStorage.getItem("clean_smart_settings"));
            }
            catch (err) {
                settings = null;
            }

            if (settings == null) {
                settings = {
                    temperatureFormat: 0,
                    hoursMinutesSeparator: 0,
                    dateFormat: 0,
                    invertColors: 0,
                    bluetoothBuzz: 0, // old checkbox 2.17
                    bluetoothAlert: 0, // new dropdown 2.18
                    locationService: 0,
                    woeid: getURLVariable('version') >= '2.22' ? '' : 0,
                    weatherInterval: 60,
                    language: 255,
                    forecastIoApiKey: ''
                };
            }

            // setting checkboxes' values
            if (settings.invertColors == 1) $('#invertColors').attr('checked', 'checked');
            if (getURLVariable('version') < '2.18') {// old bluetooth checkbox
                if (settings.bluetoothBuzz == 1) $('#bluetoothBuzz').attr('checked', 'checked');
            }
          

            // setting dropdown values
            $('#temperatureFormat').val(settings.temperatureFormat);
            $('#hoursMinutesSeparator').val(settings.hoursMinutesSeparator);
            $('#dateFormat').val(settings.dateFormat);
            if (getURLVariable('version') >= '2.18') {// new bluetooth dropdown
                $('#bluetoothAlert').val(settings.bluetoothAlert != null ? settings.bluetoothAlert : BLUETOOTH_ALERT_WEAK);
            }

            $('#locationService').val(settings.locationService? settings.locationService : 0); // reading location and if manual - setting WOEID as well
            if (settings.locationService == '1') {
                $('#xtxtWOEID').val(settings.woeid);
                $('#xDivWOID').show();
            } else {
                $('#xtxtWOEID').val('');
                $('#xDivWOID').hide();
            }

            $('#weatherInterval').val(settings.weatherInterval ? settings.weatherInterval : 60); // reading update interval and if not set - make it an hour
            $('#language').val(settings.language || settings.language == 0 ? settings.language : 255);

            //after version 2.21 switched to Forecast.IO weather and Nominatim geocoding
            if (getURLVariable('version') >= '2.21') {

                if (getURLVariable('version') >= '2.22') {
                    //renaming woeid
                    $('#woeidTite').html('Please enter coordinates: lat,long');

                } else {
                    //disabling manual location
                    if ($('#locationService').val() == LOCATION_MANUAL) {
                        $('#locationService').val(LOCATION_AUTOMATIC);
                        $('#xDivWOID').hide();
                    }
                    $('#manual').hide();
                }

                //showing input box for Forecast IO API Key
                $('#lblForecastIoApiKey').show();

                //restoring saved API key
                $('#xtxtForecastIoApiKey').val(settings.forecastIoApiKey? settings.forecastIoApiKey: '');
            }

            //assigning save button

            $('#xbtnSave').click(function () {

                if ($('#locationService').val() == '1') { // if we selected manual location check and save WOEID
                    if ($('#xtxtWOEID').val() == '') {
                        if (getURLVariable('version') >= '2.22') alert('Please enter coordinates');
                        else alert('Please enter WOEID');
                        return;
                    }
                }

                settings.woeid = getURLVariable('version') >= '2.18' ? $('#xtxtWOEID').val() : parseInt($('#xtxtWOEID').val());
                settings.forecastIoApiKey = $('#xtxtForecastIoApiKey').val();

                localStorage.setItem("clean_smart_settings", JSON.stringify(settings));

                var location = (decodeURIComponent(getURLVariable('return_to')) || "pebblejs://close#") + encodeURIComponent(JSON.stringify(settings));
                document.location = location;

            })

            //assigning cancel button
            $('#xbtnCancel').click(function () {

                var location = decodeURIComponent(getURLVariable('return_to')) || "pebblejs://close#";
                document.location = location;

            })

            //assigning checkboxes
            $("input[type=checkbox]").change(function () {
                settings[this.id] = this.checked ? 1 : 0;
            });


            

            //getting value of dropdowns
            $('select').change(function (e) {
                e.preventDefault();
                var intVal = parseInt(this.value);
                settings[this.id] = intVal;

                //for location selection also checking if textbox needed for manual WOEID
                if (this.id == 'locationService') {
                    if (this.options[this.selectedIndex].id == 'manual') {
                        $('#xDivWOID').show();
                    } else {
                        $('#xDivWOID').hide();
                    }

                    // disable weather interval if weather is disabled
                    if (this.options[this.selectedIndex].id == 'disabled') {
                        $('#weatherInterval').attr('disabled',  'disabled'); 
                    } else {
                        $('#weatherInterval').removeAttr('disabled');
                    }

                    
                }
            })


            //showing WHOEID lookup screen
            $('#xbtnWOEID').click(function (e) {
                $('#results').children().remove();
                $('#xtxtAddress').val('');
                $('#xDivWOIDlookup').show();
                window.scrollTo(0, 0);
            })

            //WOEID lookup
            $('#xbtnWOEIDlookup').click(function (e) {
                e.preventDefault();
                $('#results').children().remove();

                if (getURLVariable('version') >= '2.18') { //for this version and after use lat,long lookup for forecast.io 

                    $.getJSON('http://nominatim.openstreetmap.org/search?q=' + $('#xtxtAddress').val() + '&format=json', function (data) {

                        if (data.count == 0) { // no results
                            $('#results').append('<div>No Results</div>');
                        } else { //looping thru results
                            $('#results').append('<div><i>Tap location below to get coordinates</i></div>');
                            $('#results').append('<hr/>');
                            for (i = 0; i < data.length; i++) {
                                result = data[i];
                                $('#results').append('<div onclick = "$(\'#xtxtWOEID\').val(\'' + result.lat + ',' + result.lon + '\');$(\'#xDivWOIDlookup\').hide();">' +
                                    (result.display_name.length > 60 ? result.display_name.substring(0, 57) + '...' : result.display_name) +
                                  '</div>');
                            }
                        }
                    })


                } else { // otherwise use original Yahoo lookup

                    $.getJSON('http://query.yahooapis.com/v1/public/yql', { 'q': 'select * from geo.places where text="' + $('#xtxtAddress').val() + '"', 'format': 'json' }, function (data) {
                        console.log(data);

                        if (data.query.count == 0) { // no results
                            $('#results').append('<div>No Results</div>');
                        } else if (data.query.count == 1) { // single result
                            result = data.query.results.place;
                            $('#results').append('<div onclick = "$(\'#xtxtWOEID\').val(' + result.woeid + ');$(\'#xDivWOIDlookup\').hide();">' + result.name + ', ' + result.admin1.content + ' (' + result.admin1.code + ') WOEID: <span style="font-weight:bold">' + result.woeid + '</span></div>');
                        } else { // no results
                            for (i = 0; i < data.query.count; i++) {
                                result = data.query.results.place[i];
                                $('#results').append('<div onclick = "$(\'#xtxtWOEID\').val(' + result.woeid + ');$(\'#xDivWOIDlookup\').hide();">' + result.name + ', ' + result.admin1.content + ' (' + result.admin1.code + ') WOEID: <span style="font-weight:bold">' + result.woeid + '</span></div>');
                            }
                        }
                    })
                }


            })
        }
     )

    </script>


</body>
</html>